#!/bin/bash

set -euo pipefail

declare -ri dictionary_parts=${1:-3}
declare -i count=${2:-1}

DICTIONARY="${DICTIONARY:-/usr/share/dict/words}"

if ! [[ -f "${DICTIONARY}" ]]; then
   >&2 echo 'Dictionary file is unreadable, aborting'
   exit 1
fi

if ! (( $(wc -l < "${DICTIONARY}") > 50000 )); then
  >&2 echo 'Dictionary too small, aborting'
  exit 2
fi

function separate() {
  # Separate input on stdin with newlines
  sed -r 's/(.)/\1\n/g'
}

# add newlines between the characters so that we can use `shuf` to pick one at
# random
characters=$(echo '~!@#$%^&*()_+=-{}[]|\:;<>,.?/' | separate)

function password() {
  (
    shuf -n"$dictionary_parts" "${DICTIONARY}"; # take n random words
    # generate a random string
    (grep -Eoa --max-count 1 '[A-Za-z0-9_.-]{3,4}' < /dev/random | head -n1 ) ;
    shuf -n1 <<< "$characters";
  ) | shuf |
    tr '\n' ' ' |                    # replace newlines with spaces
    sed -r "s/'//g" |                # remove quotes, they're bothersome
    sed -r 's/ $//' |                # remove trailing space
    iconv -f utf8 -t ascii//TRANSLIT # remove accents
}

while ((count--)); do
  printf "%s\n" "$(password)"
done
